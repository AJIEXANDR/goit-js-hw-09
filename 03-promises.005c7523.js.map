{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALG,MAAWH,EAAJI,MAYvB,SAAuBC,EAAUF,GAC/B,IAAMG,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,uBAAwCG,OAAfR,EAAS,QAAYQ,OAANV,EAAM,OAEpDQ,EAAK,sBAAqCE,OAAfR,EAAS,QAAYQ,OAANV,EAAM,M,GAEnDA,E,KAlBLW,CAHiCd,EAANe,OAGNC,MAAOb,EAAMa,OAC/BC,MAAK,SAAAP,GACJQ,EAAAzB,GAAS0B,OAAOC,QAAQV,E,IAEzBW,OAAM,SAAAC,GACLJ,EAAAzB,GAAS0B,OAAOI,QAAQD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', createPromiseBtn);\n\nfunction createPromiseBtn(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  createPromise(amount.value, delay.value)\n    .then(resolve => {\n      Notiflix.Notify.success(resolve);\n    })\n    .catch(error => {\n      Notiflix.Notify.failure(error);\n    });\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay","step","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","$ce04d3a99e08e73b$var$createPromise","amount","value","then","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.005c7523.js.map"}