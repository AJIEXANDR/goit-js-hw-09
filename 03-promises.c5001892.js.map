{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAcA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAeC,MAAU,GAErDA,EAAM,G,CArBAQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAMC,iBACN,MACEC,UAAUb,MAAEA,EAAKc,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,eAkBZ,SAA4BhB,EAAOe,EAAQD,GACzC,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAAG,CAElCnB,EAAcmB,EAAI,EADCC,OAAOC,SAASnB,GAASiB,EAAIC,OAAOC,SAASL,IAE7DM,MAAKf,IACJgB,EAAAzB,GAAS0B,OAAOC,QAAQlB,EAAQ,IAEjCmB,OAAMC,IACLJ,EAAAzB,GAAS0B,OAAOI,QAAQD,EAAM,G,EAxBpCE,CAAmB3B,EAAM4B,MAAOb,EAAOa,MAAOd,EAAKc,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', createPromiseBtn);\n\nfunction createPromiseBtn(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  qunatityOfPromises(delay.value, amount.value, step.value);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nfunction qunatityOfPromises(delay, amount, step) {\n  for (let i = 0; i < amount; i += 1) {\n    const totalDelay = Number.parseInt(delay) + i * Number.parseInt(step);\n    createPromise(i + 1, totalDelay)\n      .then(resolve => {\n        Notiflix.Notify.success(resolve);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(error);\n      });\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","step","amount","currentTarget","i","Number","parseInt","then","$parcel$interopDefault","Notify","success","catch","error","failure","$47d4ff9957288465$var$qunatityOfPromises","value"],"version":3,"file":"03-promises.c5001892.js.map"}